[project]
name = "frenz-data-acquisition"
version = "1.0.0"
description = "Comprehensive data collection system for FRENZ brainband devices with real-time visualization"
authors = [
    { name = "Luke Chang", email = "luke.j.chang@dartmouth.edu" }
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
keywords = ["frenz", "eeg", "biosignals", "data-acquisition", "marimo", "neuroscience"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]

dependencies = [
    "frenztoolkit>=0.2.8",
    "marimo>=0.15.5",
    "h5py>=3.0.0",
    "numpy>=1.21.0",
    "plotly>=6.3.0",
    "python-dotenv>=0.19.0",
    "nest-asyncio>=1.6.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "ruff>=0.13.0",
    "black>=24.0.0",
    "ipykernel>=6.0.0",
]

[project.scripts]
frenz-dashboard = "dashboard:main"
frenz-verify = "quick_start:main"

[project.urls]
Homepage = "https://github.com/yourusername/frenz_data_acquisition"
Documentation = "https://github.com/yourusername/frenz_data_acquisition/blob/main/README.md"
Repository = "https://github.com/yourusername/frenz_data_acquisition.git"
Issues = "https://github.com/yourusername/frenz_data_acquisition/issues"

[tool.marimo]
# Marimo-specific configuration
[tool.marimo.runtime]
# Load environment variables from .env file
dotenv = [".env"]

[tool.uv]
# UV package manager settings
dev-dependencies = [
    "pytest>=8.4.2",
    "ruff>=0.13.0",
    "black>=24.0.0",
]

[tool.ruff]
# Linting settings
line-length = 120
target-version = "py39"
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]  # Line length handled by formatter
exclude = [".venv", "venv", "data", "logs"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in init files
"test_*.py" = ["F841"]    # Allow unused variables in tests

[tool.black]
# Code formatting settings
line-length = 120
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | data
  | logs
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
# Test settings
testpaths = ["tests", "test_*.py"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"